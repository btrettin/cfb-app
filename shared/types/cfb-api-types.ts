/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
  "/games": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Games and results
     * @description Get game results
     */
    get: operations["getGames"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/scoreboard": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Live game results (Patreon only)
     * @description Get live game results
     */
    get: operations["getScoreboard"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/records": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Team records
     * @description Get team records by year
     */
    get: operations["getTeamRecords"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/calendar": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Season calendar
     * @description Get calendar of weeks by season
     */
    get: operations["getCalendar"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/games/media": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Game media information and schedules
     * @description Game media information (TV, radio, etc)
     */
    get: operations["getGameMedia"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/games/weather": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Game weather information (Patreon only)
     * @description Weather information for the hour of kickoff
     */
    get: operations["getGameWeather"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/games/players": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Player game stats
     * @description Player stats broken down by game
     */
    get: operations["getPlayerGameStats"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/games/teams": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Team game stats
     * @description Team stats broken down by game
     */
    get: operations["getTeamGameStats"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/game/box/advanced": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Advanced box scores
     * @description Get advanced box score data
     */
    get: operations["getAdvancedBoxScore"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/drives": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Drive data and results
     * @description Get game drives
     */
    get: operations["getDrives"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/plays": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Play by play data
     * @description Get play data and results
     */
    get: operations["getPlays"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/live/plays": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Live metrics and PBP (Patreon only)
     * @description Get live metrics and PBP
     */
    get: operations["getLivePlays"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/play/types": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Play types
     * @description Types of plays
     */
    get: operations["getPlayTypes"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/play/stats": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Play stats by play
     * @description Gets player stats associated by play (limit 1000)
     */
    get: operations["getPlayStats"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/play/stat/types": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Types of player play stats
     * @description Type of play stats
     */
    get: operations["getPlayStatTypes"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/conferences": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Conferences
     * @description Get conference list
     */
    get: operations["getConferences"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/teams": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Team information
     * @description Get team information
     */
    get: operations["getTeams"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/teams/fbs": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * FBS team list
     * @description Information on major division teams
     */
    get: operations["getFbsTeams"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/roster": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Team rosters
     * @description Roster data
     */
    get: operations["getRoster"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/talent": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Team talent composite rankings
     * @description Team talent composite
     */
    get: operations["getTalent"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/teams/matchup": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Team matchup history
     * @description Matchup history
     */
    get: operations["getTeamMatchup"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/venues": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Arena and venue information
     * @description Venues
     */
    get: operations["getVenues"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/coaches": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Coaching records and history
     * @description Coaching history
     */
    get: operations["getCoaches"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/rankings": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Historical polls and rankings
     * @description Poll rankings
     */
    get: operations["getRankings"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/lines": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Betting lines
     * @description Closing betting lines
     */
    get: operations["getLines"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/recruiting/players": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Player recruiting ratings and rankings
     * @description Get player recruiting rankings and data. Requires either a year or team to be specified.
     */
    get: operations["getRecruitingPlayers"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/recruiting/teams": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Team recruiting rankings and ratings
     * @description Team recruiting rankings
     */
    get: operations["getRecruitingTeams"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/recruiting/groups": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Recruit position group ratings
     * @description Gets a list of aggregated statistics by team and position grouping
     */
    get: operations["getRecruitingGroups"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ratings/sp": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Historical SP+ ratings
     * @description SP+ rating data
     */
    get: operations["getSPRatings"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ratings/srs": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Historical SRS ratings
     * @description SRS rating data (requires either a year or team specified)
     */
    get: operations["getSRSRatings"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ratings/sp/conferences": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Historical SP+ ratings by conference
     * @description Get average SP+ historical rating data by conference
     */
    get: operations["getConferenceSPRatings"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ratings/elo": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Historical Elo ratings
     * @description Elo rating data
     */
    get: operations["getEloRatings"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ratings/fpi": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Historical FPI ratings
     * @description FPI rating data
     */
    get: operations["getFPIRatings"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ppa/predicted": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Predicted Points (i.e. Expected Points or EP)
     * @description Predicted Points
     */
    get: operations["getPredictedPoints"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ppa/teams": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Predicted Points Added (PPA/EPA) data by team
     * @description Predicted Points Added (PPA)
     */
    get: operations["getTeamPPA"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ppa/games": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Team Predicated Points Added (PPA/EPA) by game
     * @description Predicted Points Added (PPA) by game
     */
    get: operations["getGamePPA"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ppa/players/games": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Player Predicated Points Added (PPA/EPA) broken down by game
     * @description Predicted Points Added (PPA) by player game
     */
    get: operations["getPlayerGamePPA"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/ppa/players/season": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Player Predicated Points Added (PPA/EPA) broken down by season
     * @description Predicted Points Added (PPA) by player season
     */
    get: operations["getPlayerSeasonPPA"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/metrics/fg/ep": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Field Goal Expected Points
     * @description Field Goal Expected Poitns
     */
    get: operations["getFGEP"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/metrics/wp": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Win probability chart data
     * @description Win probability data
     */
    get: operations["getWinProbabilityData"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/metrics/wp/pregame": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Pregame win probability data
     * @description Pregame win probabilities
     */
    get: operations["getPregameWinProbabilities"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/stats/season": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Team statistics by season
     * @description Team season stats
     */
    get: operations["getTeamSeasonStats"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/stats/season/advanced": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Advanced team metrics by season
     * @description Advanced team season stats
     */
    get: operations["getAdvancedTeamSeasonStats"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/stats/game/advanced": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Advanced team metrics by game
     * @description Advanced team game stats
     */
    get: operations["getAdvancedTeamGameStats"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/stats/categories": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Team stat categories
     * @description Stat category list
     */
    get: operations["getStatCategories"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/player/search": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Search for player information
     * @description Search for players
     */
    get: operations["playerSearch"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/player/usage": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Player usage metrics broken down by season
     * @description Player usage metrics by season
     */
    get: operations["getPlayerUsage"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/player/returning": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Team returning production metrics
     * @description Returning production metrics
     */
    get: operations["getReturningProduction"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/stats/player/season": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Player stats by season
     * @description Season player stats
     */
    get: operations["getPlayerSeasonStats"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/player/portal": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Transfer portal by season
     * @description Transfer portal by season
     */
    get: operations["getTransferPortal"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/draft/teams": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List of NFL teams
     * @description List of NFL teams
     */
    get: operations["getNFLTeams"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/draft/positions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List of NFL positions
     * @description List of NFL positions
     */
    get: operations["getNFLPositions"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/draft/picks": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List of NFL Draft picks
     * @description List of NFL Draft picks
     */
    get: operations["getDraftPicks"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
};
export type webhooks = Record<string, never>;
export type components = {
  schemas: {
    Game: {
      id: number;
      season: number;
      week: number;
      season_type: string;
      start_date: string;
      start_time_tbd: boolean;
      completed: boolean;
      neutral_site: boolean;
      conference_game: boolean;
      attendance: number | null;
      venue_id: number;
      venue: string;
      home_id: number;
      home_team: string;
      home_conference: string;
      home_division: string;
      home_points: number;
      home_line_scores: number[];
      home_post_win_prob: number | string;
      home_pregame_elo: number;
      home_postgame_elo: number;
      away_id: number;
      away_team: string;
      away_conference: string;
      away_division: string;
      away_points: number;
      away_line_scores: number[];
      away_post_win_prob: number;
      away_pregame_elo: number;
      away_postgame_elo: number;
      excitement_index: number;
      highlights: string;
      notes: string;
    };
    TeamRecord: {
      year?: number;
      teamId?: number;
      team?: string;
      conference?: string;
      division?: string;
      expectedWins?: number;
      total?: {
        games?: number;
        wins?: number;
        losses?: number;
        ties?: number;
      };
      conferenceGames?: {
        games?: number;
        wins?: number;
        losses?: number;
        ties?: number;
      };
      homeGames?: {
        games?: number;
        wins?: number;
        losses?: number;
        ties?: number;
      };
      awayGames?: {
        games?: number;
        wins?: number;
        losses?: number;
        ties?: number;
      };
    };
    GameMedia: {
      id?: number;
      season?: number;
      week?: number;
      seasonType?: string;
      startTime?: string;
      isStartTimeTBD?: boolean;
      homeTeam?: string;
      homeConference?: string;
      awayTeam?: string;
      awayConference?: string;
      mediaType?: string;
      outlet?: string;
    };
    GameWeather: {
      id?: number;
      season?: number;
      week?: number;
      seasonType?: string;
      startTime?: string;
      gameIndoors?: boolean;
      homeTeam?: string;
      homeConference?: string;
      awayTeam?: string;
      awayConference?: string;
      venueId?: number;
      venue?: string;
      temperature?: number;
      dewPoint?: number;
      humidity?: number;
      precipitation?: number;
      snowfall?: number;
      windDirection?: number;
      windSpeed?: number;
      pressure?: number;
      weatherConditionCode?: number;
      weatherCondition?: string;
    };
    PlayerGame: {
      id?: number;
      teams?: {
        school?: string;
        conference?: string;
        homeAway?: string;
        points?: number;
        categories?: {
          name?: string;
          types?: {
            name?: string;
            athletes?: {
              id?: number;
              name?: string;
              stat?: string;
            }[];
          }[];
        }[];
      }[];
    };
    TeamGame: {
      id?: number;
      teams?: {
        schoolId?: number;
        school?: string;
        conference?: string;
        homeAway?: string;
        points?: number;
        stats?: {
          category?: string;
          stat?: string;
        }[];
      }[];
    };
    Drive: {
      offense?: string;
      offense_conference?: string;
      defense?: string;
      defense_conference?: string;
      game_id?: number;
      id?: number;
      drive_number?: number;
      scoring?: boolean;
      start_period?: number;
      start_yardline?: number;
      start_yards_to_goal?: number;
      start_time?: {
        minutes?: number;
        seconds?: number;
      };
      end_period?: number;
      end_yardline?: number;
      end_yards_to_goal?: number;
      end_time?: {
        minutes?: number;
        seconds?: number;
      };
      plays?: number;
      yards?: number;
      drive_result?: string;
      is_home_offense?: boolean;
      start_offense_score?: number;
      start_defense_score?: number;
      end_offense_score?: number;
      end_defense_score?: number;
    };
    Play: {
      id?: number;
      drive_id?: number;
      game_id?: number;
      drive_number?: number;
      play_number?: number;
      offense?: string;
      offense_conference?: string;
      offense_score?: number;
      defense?: string;
      home?: string;
      away?: string;
      defense_conference?: string;
      defense_score?: number;
      period?: number;
      clock?: {
        minutes?: number;
        seconds?: number;
      };
      offense_timeouts?: number;
      defense_timeouts?: number;
      yard_line?: number;
      yards_to_goal?: number;
      down?: number;
      distance?: number;
      yards_gained?: number;
      scoring?: boolean;
      play_type?: string;
      play_text?: string;
      ppa?: number;
      wallclock?: string;
    };
    PlayType: {
      id?: number;
      text?: string;
      abbreviation?: string;
    };
    Conference: {
      id?: number;
      name?: string;
      short_name?: string;
      abbreviation?: string;
      classification?: string;
    };
    Team: {
      id: number;
      school: string;
      mascot: string;
      abbreviation: string;
      alt_name_1: string;
      alt_name_2: string;
      alt_name_3: string;
      classification: string;
      conference: string;
      division: string;
      color: string;
      alt_color: string;
      logos: string[];
      twitter: string;
      location: {
        venue_id: number;
        name: string;
        city: string;
        state: string;
        zip: string;
        country_code: string;
        timezone: string;
        latitude: number;
        longitude: number;
        elevation: number | string;
        capacity: number;
        year_constructed: number;
        grass: boolean;
        dome: boolean;
      };
    };
    Player: {
      id?: number;
      first_name?: string;
      last_name?: string;
      team?: string;
      height?: number;
      weight?: number;
      jersey?: number;
      year?: number;
      position?: string;
      home_city?: string;
      home_state?: string;
      home_country?: string;
      home_latitude?: number;
      home_longitude?: number;
      home_county_fips?: string;
      recruit_ids?: number[];
    };
    TeamTalent: {
      year?: number;
      school?: string;
      talent?: number;
    };
    TeamSeason: {
      school?: string;
      year?: string;
      games?: number;
      wins?: number;
      losses?: number;
      ties?: number;
      /** @description Rank in the AP preseason poll */
      preseason_rank?: number;
      /** @description Final ranking in the AP poll */
      postseason_rank?: number;
      /** @description Final SRS rankings */
      srs?: number;
      /** @description Final overall SP+ rating */
      sp_overall?: number;
      /** @description Final SP+ offensive rating */
      sp_offense?: number;
      /** @description Final SP+ defensive rating */
      sp_defense?: number;
    };
    Venue: {
      id?: number;
      name?: string;
      capacity?: number;
      grass?: boolean;
      city?: string;
      state?: string;
      zip?: string;
      country_code?: string;
      location?: {
        x?: number;
        y?: number;
      };
      elevation?: number;
      year_constructed?: number;
      dome?: boolean;
      timezone?: string;
    };
    RankingWeek: {
      season?: number;
      seasonType?: string;
      week?: number;
      polls?: {
        poll?: string;
        ranks?: {
          rank?: number;
          school?: string;
          conference?: string;
          firstPlaceVotes?: number;
          points?: number;
        }[];
      }[];
    };
    TeamMatchup: {
      team1?: string;
      team2?: string;
      startYear?: number;
      endYear?: number;
      team1Wins?: number;
      team2Wins?: number;
      ties?: number;
      games?: {
        season?: number;
        week?: number;
        season_type?: string;
        date?: string;
        neutralSite?: boolean;
        venue?: string;
        homeTeam?: string;
        homeScore?: number;
        awayTeam?: string;
        awayScore?: number;
        winner?: string;
      }[];
    };
    GameLines: {
      id?: number;
      season?: number;
      week?: number;
      seasonType?: string;
      startDate?: string;
      homeTeam?: string;
      homeConference?: string;
      homeScore?: number;
      awayTeam?: string;
      awayConference?: string;
      awayScore?: number;
      lines?: {
        provider?: string;
        spread?: number;
        formattedSpread?: string;
        spreadOpen?: number;
        overUnder?: number;
        overUnderOpen?: number;
        homeMoneyline?: number;
        awayMoneyline?: number;
      }[];
    };
    Recruit: {
      id?: number;
      athleteId?: number;
      recruitType?: string;
      year?: number;
      ranking?: number;
      name?: string;
      school?: string;
      committedTo?: string;
      position?: string;
      height?: number;
      weight?: number;
      stars?: number;
      rating?: number;
      city?: string;
      stateProvince?: string;
      country?: string;
      hometownInfo?: {
        latitude?: number;
        longitude?: number;
        countyFips?: string;
      };
    };
    TeamRecruitingRank: {
      year?: number;
      rank?: number;
      team?: string;
      points?: number;
    };
    PositionGroupRecruitingRating: {
      team?: string;
      conference?: string;
      positionGroup?: string;
      averageRating?: number;
      totalRating?: number;
      commits?: number;
      averageStars?: number;
    };
    TeamSRSRating: {
      year?: number;
      team?: string;
      conference?: string;
      division?: string;
      rating?: number;
      ranking?: number;
    };
    TeamEloRating: {
      year?: number;
      team?: string;
      conference?: string;
      elo?: number;
    };
    TeamFPIRating: {
      year?: number;
      team?: string;
      conference?: string;
      fpi?: number;
      resumeRanks?: {
        strengthOfRecord?: number;
        fpi?: number;
        averageWinProbability?: number;
        strengthOfSchedule?: number;
        remainingStrengthOfSchedule?: number;
        gameControl?: number;
      };
      efficiencies?: {
        overall?: number;
        offense?: number;
        defense?: number;
        specialTeams?: number;
      };
    };
    TeamSPRating: {
      year?: number;
      team?: string;
      conference?: string;
      rating?: number;
      ranking?: number;
      secondOrderWins?: number;
      sos?: number;
      offense?: {
        ranking?: number;
        rating?: number;
        success?: number;
        explosiveness?: number;
        rushing?: number;
        passing?: number;
        standardDowns?: number;
        passingDowns?: number;
        runRate?: number;
        pace?: number;
      };
      defense?: {
        ranking?: number;
        rating?: number;
        success?: number;
        explosiveness?: number;
        rushing?: number;
        pasing?: number;
        standardDowns?: number;
        passingDowns?: number;
        havoc?: {
          total?: number;
          frontSeven?: number;
          db?: number;
        };
      };
      specialTeams?: {
        rating?: number;
      };
    };
    ConferenceSPRating: {
      year?: number;
      conference?: string;
      rating?: number;
      secondOrderWins?: number;
      sos?: number;
      offense?: {
        rating?: number;
        success?: number;
        explosiveness?: number;
        rushing?: number;
        passing?: number;
        standardDowns?: number;
        passingDowns?: number;
        runRate?: number;
        pace?: number;
      };
      defense?: {
        rating?: number;
        success?: number;
        explosiveness?: number;
        rushing?: number;
        pasing?: number;
        standardDowns?: number;
        passingDowns?: number;
        havoc?: {
          total?: number;
          frontSeven?: number;
          db?: number;
        };
      };
      specialTeams?: {
        rating?: number;
      };
    };
    PredictedPoints: {
      yardLine?: number;
      predictedPoints?: number;
    };
    FieldGoalExpectedPoints: {
      yardsToGoal?: number;
      distance?: number;
      expectedPoints?: number;
    };
    TeamSeasonStat: {
      season?: number;
      team?: string;
      conference?: string;
      statName?: string;
      statValue?: number;
    };
    TeamPPA: {
      season?: number;
      team?: string;
      conference?: string;
      offense?: {
        overall?: number;
        passing?: number;
        rushing?: number;
        firstDown?: number;
        secondDown?: number;
        thirdDown?: number;
        cumulative?: {
          total?: number;
          passing?: number;
          rushing?: number;
        };
      };
      defense?: {
        overall?: number;
        passing?: number;
        rushing?: number;
        firstDown?: number;
        secondDown?: number;
        thirdDown?: number;
        cumulative?: {
          total?: number;
          passing?: number;
          rushing?: number;
        };
      };
    };
    GamePPA: {
      gameId?: number;
      season?: number;
      week?: number;
      team?: string;
      conference?: string;
      opponent?: string;
      offense?: {
        overall?: number;
        passing?: number;
        rushing?: number;
        firstDown?: number;
        secondDown?: number;
        thirdDown?: number;
      };
      defense?: {
        overall?: number;
        passing?: number;
        rushing?: number;
        firstDown?: number;
        secondDown?: number;
        thirdDown?: number;
      };
    };
    PlayWP: {
      gamesId?: number;
      playId?: number;
      playText?: string;
      homeId?: number;
      home?: string;
      awayId?: number;
      away?: string;
      spread?: number;
      homeBall?: boolean;
      homeScore?: number;
      awayScore?: number;
      timeRemaining?: number;
      yardLine?: number;
      down?: number;
      distance?: number;
      homeWinProb?: number;
      playNumber?: number;
    };
    PregameWP: {
      season?: number;
      seasonType?: string;
      week?: number;
      gameId?: number;
      homeTeam?: string;
      awayTeam?: string;
      spread?: number;
      homeWinProb?: number;
    };
    PlayStatType: {
      id?: number;
      name?: string;
    };
    PlayStat: {
      gameId?: number;
      season?: number;
      week?: number;
      team?: string;
      conference?: string;
      opponent?: string;
      teamScore?: number;
      opponentScore?: number;
      driveId?: number;
      playId?: number;
      period?: number;
      clock?: {
        minutes?: number;
        seconds?: number;
      };
      yardsToGoal?: number;
      down?: number;
      distance?: number;
      athleteId?: number;
      athleteName?: string;
      statType?: string;
      stat?: number;
    };
    AdvancedSeasonStat: {
      season?: number;
      team?: string;
      conference?: string;
      offense?: {
        plays?: number;
        drives?: number;
        ppa?: number;
        totalPPA?: number;
        successRate?: number;
        explosiveness?: number;
        powerSuccess?: number;
        stuffRate?: number;
        lineYards?: number;
        lineYardsTotal?: number;
        secondLevelYards?: number;
        secondLevelYardsTotal?: number;
        openFieldYards?: number;
        openFieldYardsTotal?: number;
        totalOpportunies?: number;
        pointsPerOpportunity?: number;
        fieldPosition?: {
          averageStart?: number;
          averagePredictedPoints?: number;
        };
        havoc?: {
          total?: number;
          frontSeven?: number;
          db?: number;
        };
        standardDowns?: {
          rate?: number;
          ppa?: number;
          successRate?: number;
          explosiveness?: number;
        };
        passingDowns?: {
          rate?: number;
          ppa?: number;
          successRate?: number;
          explosiveness?: number;
        };
        rushingPlays?: {
          rate?: number;
          ppa?: number;
          totalPPA?: number;
          successRate?: number;
          explosiveness?: number;
        };
        passingPlays?: {
          rate?: number;
          ppa?: number;
          totalPPA?: number;
          successRate?: number;
          explosiveness?: number;
        };
      };
      defense?: {
        plays?: number;
        drives?: number;
        ppa?: number;
        totalPPA?: number;
        successRate?: number;
        explosiveness?: number;
        powerSuccess?: number;
        stuffRate?: number;
        lineYards?: number;
        lineYardsTotal?: number;
        secondLevelYards?: number;
        secondLevelYardsTotal?: number;
        openFieldYards?: number;
        openFieldYardsTotal?: number;
        totalOpportunies?: number;
        pointsPerOpportunity?: number;
        fieldPosition?: {
          averageStart?: number;
          averagePredictedPoints?: number;
        };
        havoc?: {
          total?: number;
          frontSeven?: number;
          db?: number;
        };
        standardDowns?: {
          rate?: number;
          ppa?: number;
          successRate?: number;
          explosiveness?: number;
        };
        passingDowns?: {
          rate?: number;
          ppa?: number;
          successRate?: number;
          explosiveness?: number;
        };
        rushingPlays?: {
          rate?: number;
          ppa?: number;
          totalPPA?: number;
          successRate?: number;
          explosiveness?: number;
        };
        passingPlays?: {
          rate?: number;
          ppa?: number;
          totalPPA?: number;
          successRate?: number;
          explosiveness?: number;
        };
      };
    };
    AdvancedGameStat: {
      gameId?: number;
      season?: number;
      week?: number;
      team?: string;
      opponent?: string;
      offense?: {
        plays?: number;
        drives?: number;
        ppa?: number;
        totalPPA?: number;
        successRate?: number;
        explosiveness?: number;
        powerSuccess?: number;
        stuffRate?: number;
        lineYards?: number;
        lineYardsTotal?: number;
        secondLevelYards?: number;
        secondLevelYardsTotal?: number;
        openFieldYards?: number;
        openFieldYardsTotal?: number;
        standardDowns?: {
          ppa?: number;
          successRate?: number;
          explosiveness?: number;
        };
        passingDowns?: {
          ppa?: number;
          successRate?: number;
          explosiveness?: number;
        };
        rushingPlays?: {
          ppa?: number;
          totalPPA?: number;
          successRate?: number;
          explosiveness?: number;
        };
        passingPlays?: {
          ppa?: number;
          totalPPA?: number;
          successRate?: number;
          explosiveness?: number;
        };
      };
      defense?: {
        plays?: number;
        drives?: number;
        ppa?: number;
        totalPPA?: number;
        successRate?: number;
        explosiveness?: number;
        powerSuccess?: number;
        stuffRate?: number;
        lineYards?: number;
        lineYardsTotal?: number;
        secondLevelYards?: number;
        secondLevelYardsTotal?: number;
        openFieldYards?: number;
        openFieldYardsTotal?: number;
        standardDowns?: {
          ppa?: number;
          successRate?: number;
          explosiveness?: number;
        };
        passingDowns?: {
          ppa?: number;
          successRate?: number;
          explosiveness?: number;
        };
        rushingPlays?: {
          ppa?: number;
          totalPPA?: number;
          successRate?: number;
          explosiveness?: number;
        };
        passingPlays?: {
          ppa?: number;
          totalPPA?: number;
          successRate?: number;
          explosiveness?: number;
        };
      };
    };
    PlayerSearchResult: {
      id?: number;
      team?: string;
      name?: string;
      firstName?: string;
      lastName?: string;
      weight?: number;
      height?: number;
      jersey?: number;
      position?: string;
      hometown?: string;
      teamColor?: string;
      teamColorSecondary?: string;
    };
    PlayerGamePPA: {
      season?: number;
      week?: number;
      name?: string;
      position?: string;
      team?: string;
      opponent?: string;
      averagePPA?: {
        all?: number;
        pass?: number;
        rush?: number;
      };
    };
    PlayerSeasonPPA: {
      season?: number;
      id?: number;
      name?: string;
      position?: string;
      team?: string;
      conference?: string;
      averagePPA?: {
        all?: number;
        pass?: number;
        rush?: number;
        firstDown?: number;
        secondDown?: number;
        thirdDown?: number;
        standardDowns?: number;
        passingDowns?: number;
      };
      totalPPA?: {
        all?: number;
        pass?: number;
        rush?: number;
        firstDown?: number;
        secondDown?: number;
        thirdDown?: number;
        standardDowns?: number;
        passingDowns?: number;
      };
    };
    PlayerUsage: {
      season?: number;
      id?: number;
      name?: string;
      position?: string;
      team?: string;
      conference?: string;
      usage?: {
        overall?: number;
        pass?: number;
        rush?: number;
        firstDown?: number;
        secondDown?: number;
        thirdDown?: number;
        standardDowns?: number;
        passingDowns?: number;
      };
    };
    ReturningProduction: {
      season?: number;
      team?: string;
      conference?: string;
      totalPPA?: number;
      totalPassingPPA?: number;
      totalReceivingPPA?: number;
      totalRushingPPA?: number;
      percentPPA?: number;
      percentPassingPPA?: number;
      percentReceivingPPA?: number;
      percentRushingPPA?: number;
      usage?: number;
      passingUsage?: number;
      receivingUsage?: number;
      rushingUsage?: number;
    };
    BoxScore: {
      teams?: {
        ppa?: {
          team?: string;
          plays?: number;
          overall?: {
            total?: number;
            quarter1?: number;
            quarter2?: number;
            quarter3?: number;
            quarter4?: number;
          };
          passing?: {
            total?: number;
            quarter1?: number;
            quarter2?: number;
            quarter3?: number;
            quarter4?: number;
          };
          rushing?: {
            total?: number;
            quarter1?: number;
            quarter2?: number;
            quarter3?: number;
            quarter4?: number;
          };
        }[];
        cumulativePpa?: {
          team?: string;
          plays?: number;
          overall?: {
            total?: number;
            quarter1?: number;
            quarter2?: number;
            quarter3?: number;
            quarter4?: number;
          };
          passing?: {
            total?: number;
            quarter1?: number;
            quarter2?: number;
            quarter3?: number;
            quarter4?: number;
          };
          rushing?: {
            total?: number;
            quarter1?: number;
            quarter2?: number;
            quarter3?: number;
            quarter4?: number;
          };
        }[];
        successRates?: {
          team?: string;
          overall?: {
            total?: number;
            quarter1?: number;
            quarter2?: number;
            quarter3?: number;
            quarter4?: number;
          };
          standardDowns?: {
            total?: number;
            quarter1?: number;
            quarter2?: number;
            quarter3?: number;
            quarter4?: number;
          };
          passingDowns?: {
            total?: number;
            quarter1?: number;
            quarter2?: number;
            quarter3?: number;
            quarter4?: number;
          };
        }[];
        explosiveness?: {
          team?: string;
          overall?: {
            total?: number;
            quarter1?: number;
            quarter2?: number;
            quarter3?: number;
            quarter4?: number;
          };
        }[];
        rushing?: {
          team?: string;
          powerSuccess?: number;
          stuffRate?: number;
          lineYards?: number;
          lineYardsAverage?: number;
          secondLevelYards?: number;
          secondLevelYardsAverage?: number;
          openFieldYards?: number;
          openFieldYardsAverage?: number;
        }[];
        havoc?: {
          team?: string;
          total?: number;
          frontSeven?: number;
          db?: number;
        }[];
        scoringOpportunities?: {
          team?: string;
          opportunities?: number;
          points?: number;
          pointsPerOpportunity?: number;
        }[];
        fieldPosition?: {
          team?: string;
          averageStart?: number;
          averageStartingPredictedPoints?: number;
        }[];
      };
      players?: {
        usage?: {
          player?: string;
          team?: string;
          position?: string;
          total?: number;
          quarter1?: number;
          quarter2?: number;
          quarter3?: number;
          quarter4?: number;
          rushing?: number;
          passing?: number;
        }[];
        ppa?: {
          player?: string;
          team?: string;
          position?: string;
          average?: {
            total?: number;
            quarter1?: number;
            quarter2?: number;
            quarter3?: number;
            quarter4?: number;
            rushing?: number;
            passing?: number;
          };
          cumulative?: {
            total?: number;
            quarter1?: number;
            quarter2?: number;
            quarter3?: number;
            quarter4?: number;
            rushing?: number;
            passing?: number;
          };
        }[];
      };
    };
    PlayerSeasonStat: {
      season?: number;
      playerId?: number;
      player?: string;
      team?: string;
      conference?: string;
      category?: string;
      statType?: string;
      stat?: number;
    };
    Week: {
      season?: number;
      week?: number;
      seasonType?: string;
      firstGameStart?: string;
      lastGameStart?: string;
    };
    Coach: {
      first_name?: string;
      last_name?: string;
      hire_date?: string;
      seasons?: {
        school?: string;
        year?: string;
        games?: number;
        wins?: number;
        losses?: number;
        ties?: number;
        /** @description Rank in the AP preseason poll */
        preseason_rank?: number;
        /** @description Final ranking in the AP poll */
        postseason_rank?: number;
        /** @description Final SRS rankings */
        srs?: number;
        /** @description Final overall SP+ rating */
        sp_overall?: number;
        /** @description Final SP+ offensive rating */
        sp_offense?: number;
        /** @description Final SP+ defensive rating */
        sp_defense?: number;
      }[];
    };
    DraftTeam: {
      location?: string;
      nickname?: string;
      displayName?: string;
      logo?: string;
    };
    DraftPosition: {
      name?: string;
      abbreviation?: string;
    };
    DraftPick: {
      collegeAthleteId?: number;
      nflAthleteId?: number;
      collegeId?: number;
      collegeTeam?: string;
      collegeConference?: string;
      nflTeam?: string;
      year?: number;
      overall?: number;
      round?: number;
      pick?: number;
      name?: string;
      position?: string;
      height?: number;
      weight?: number;
      preDraftRanking?: number;
      preDraftPositionRanking?: number;
      preDraftGrade?: number;
      hometownInfo?: {
        city?: string;
        state?: string;
        country?: string;
        latitude?: number;
        longitude?: number;
        countryFips?: number;
      };
    };
    ScoreboardGame: {
      id?: number;
      startDate?: string;
      startTimeTBD?: boolean;
      tv?: string;
      neutralSite?: boolean;
      conferenceGame?: boolean;
      status?: string;
      period?: number;
      clock?: string;
      situation?: string;
      possession?: string;
      venue?: {
        name?: string;
        city?: string;
        state?: string;
      };
      homeTeam?: {
        id?: number;
        name?: string;
        conference?: string;
        classification?: string;
        points?: number;
      };
      awayTeam?: {
        id?: number;
        name?: string;
        conference?: string;
        classification?: string;
        points?: number;
      };
      weather?: {
        temperature?: number;
        description?: string;
        windSpeed?: number;
        windDirection?: number;
      };
      betting?: {
        spread?: number;
        overUnder?: number;
        homeMoneyline?: number;
        awayMoneyline?: number;
      };
    };
    LivePlayByPlay: {
      id?: number;
      status?: string;
      period?: number;
      clock?: string;
      possession?: string;
      down?: number;
      distance?: number;
      yardsToGoal?: number;
      teams?: {
        teamId?: number;
        team?: string;
        homeAway?: string;
        points?: number;
        drives?: number;
        scoringOpportunities?: number;
        pointsPerOpportunity?: number;
        plays?: number;
        lineYards?: number;
        lineYardsPerRush?: number;
        secondLevelYards?: number;
        secondLevelYardsPerRush?: number;
        openFieldYards?: number;
        openFieldYardsPerRush?: number;
        epaPerPlay?: number;
        totalEpa?: number;
        passingEpa?: number;
        epaPerPass?: number;
        rushingEpa?: number;
        epaPerRush?: number;
        successRate?: number;
        standardDownSuccessRate?: number;
        passingDownSuccessRate?: number;
        explosiveness?: number;
      }[];
      drives?: {
        id?: number;
        offenseId?: number;
        offense?: string;
        defenseId?: number;
        defense?: string;
        playCount?: number;
        yards?: number;
        startPeriod?: number;
        startClock?: string;
        startYardsToGoal?: number;
        endPeriod?: number;
        endClock?: string;
        endYardsToGoal?: number;
        duration?: string;
        scoringOpportunity?: boolean;
        plays?: {
          id?: number;
          homeScore?: number;
          awayScore?: number;
          period?: number;
          clock?: string;
          wallclock?: string;
          teamId?: number;
          team?: string;
          down?: number;
          distance?: number;
          yardsToGoal?: number;
          yardsGained?: number;
          playTypeId?: number;
          playType?: string;
          epa?: number;
          garbageTime?: boolean;
          success?: boolean;
          rushPass?: string;
          downType?: string;
          playText?: string;
        }[];
      }[];
    };
    PortalPlayer: {
      season?: number;
      firstName?: string;
      lastName?: string;
      position?: string;
      origin?: string;
      destination?: string;
      transferDate?: string;
      rating?: number;
      stars?: number;
      eligibility?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
};
export type $defs = Record<string, never>;
export interface operations {
  getGames: {
    parameters: {
      query: {
        /** @description Year/season filter for games */
        year: number;
        /** @description Map filter */
        week?: number;
        /** @description Season type filter (regular or postseason) */
        seasonType?: string;
        /** @description Team */
        team?: string;
        /** @description Home team filter */
        home?: string;
        /** @description Away team filter */
        away?: string;
        /** @description Conference abbreviation filter */
        conference?: string;
        /** @description Division classification filter (fbs/fcs/ii/iii) */
        division?: string;
        /** @description id filter for querying a single game */
        id?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Game"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getScoreboard: {
    parameters: {
      query?: {
        /** @description Classification filter (fbs, fcs, ii, or iii). Defaults to fbs. */
        classification?: string;
        /** @description Conference abbreviation filter. */
        conference?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScoreboardGame"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getTeamRecords: {
    parameters: {
      query?: {
        /** @description Year filter */
        year?: number;
        /** @description Team filter */
        team?: string;
        /** @description Conference filter */
        conference?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TeamRecord"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getCalendar: {
    parameters: {
      query: {
        /** @description Year filter */
        year: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Week"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getGameMedia: {
    parameters: {
      query: {
        /** @description Year filter */
        year: number;
        /** @description Map filter */
        week?: number;
        /** @description Season type filter (regular, postseason, or both) */
        seasonType?: string;
        /** @description Team filter */
        team?: string;
        /** @description Conference filter */
        conference?: string;
        /** @description Media type filter (tv, radio, web, ppv, or mobile) */
        mediaType?: string;
        /** @description Division classification filter (fbs/fcs/ii/iii) */
        classification?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GameMedia"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getGameWeather: {
    parameters: {
      query?: {
        /** @description Game id filter (required if no year) */
        gameId?: number;
        /** @description Year filter (required if no game id) */
        year?: number;
        /** @description Map filter */
        week?: number;
        /** @description Season type filter (regular, postseason, or both) */
        seasonType?: string;
        /** @description Team filter */
        team?: string;
        /** @description Conference filter */
        conference?: string;
        /** @description Division classification filter (fbs/fcs/ii/iii) */
        classification?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GameWeather"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getPlayerGameStats: {
    parameters: {
      query: {
        /** @description Year/season filter for games */
        year: number;
        /** @description Map filter */
        week?: number;
        /** @description Season type filter (regular or postseason) */
        seasonType?: string;
        /** @description Team filter */
        team?: string;
        /** @description Conference abbreviation filter */
        conference?: string;
        /** @description Category filter (e.g defensive) */
        category?: string;
        /** @description Game id filter */
        gameId?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PlayerGame"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getTeamGameStats: {
    parameters: {
      query: {
        /** @description Year/season filter for games */
        year: number;
        /** @description Map filter */
        week?: number;
        /** @description Season type filter (regular or postseason) */
        seasonType?: string;
        /** @description Team filter */
        team?: string;
        /** @description Conference abbreviation filter */
        conference?: string;
        /** @description Game id filter */
        gameId?: number;
        /** @description Division classification filter (fbs/fcs/ii/iii) */
        classification?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TeamGame"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getAdvancedBoxScore: {
    parameters: {
      query: {
        /** @description Game id parameters */
        gameId: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["BoxScore"];
        };
      };
    };
  };
  getDrives: {
    parameters: {
      query: {
        /** @description Season type filter */
        seasonType?: string;
        /** @description Year filter */
        year: number;
        /** @description Map filter */
        week?: number;
        /** @description Team filter */
        team?: string;
        /** @description Offensive team filter */
        offense?: string;
        /** @description Defensive team filter */
        defense?: string;
        /** @description Conference filter */
        conference?: string;
        /** @description Offensive conference filter */
        offenseConference?: string;
        /** @description Defensive conference filter */
        defenseConference?: string;
        /** @description Division classification filter (fbs/fcs/ii/iii) */
        classification?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Drive"][];
        };
      };
    };
  };
  getPlays: {
    parameters: {
      query: {
        /** @description Season type filter */
        seasonType?: string;
        /** @description Year filter */
        year: number;
        /** @description Map filter (required if team, offense, or defense, not specified) */
        week: number;
        /** @description Team filter */
        team?: string;
        /** @description Offensive team filter */
        offense?: string;
        /** @description Defensive team filter */
        defense?: string;
        /** @description Conference filter */
        conference?: string;
        /** @description Offensive conference filter */
        offenseConference?: string;
        /** @description Defensive conference filter */
        defenseConference?: string;
        /** @description Play type filter */
        playType?: number;
        /** @description Division classification filter (fbs/fcs/ii/iii) */
        classification?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Play"][];
        };
      };
    };
  };
  getLivePlays: {
    parameters: {
      query: {
        /** @description Game id */
        id: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["LivePlayByPlay"];
        };
      };
    };
  };
  getPlayTypes: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PlayType"][];
        };
      };
    };
  };
  getPlayStats: {
    parameters: {
      query?: {
        /** @description Year filter */
        year?: number;
        /** @description Map filter */
        week?: number;
        /** @description Team filter */
        team?: string;
        /** @description gameId filter (from /games endpoint) */
        gameId?: number;
        /** @description athleteId filter (from /roster endpoint) */
        athleteId?: number;
        /** @description statTypeId filter (from /play/stat/types endpoint) */
        statTypeId?: number;
        /** @description regular, postseason, or both */
        seasonType?: string;
        /** @description conference abbreviation filter */
        conference?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PlayStat"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getPlayStatTypes: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PlayStatType"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getConferences: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Conference"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getTeams: {
    parameters: {
      query?: {
        /** @description Conference abbreviation filter */
        conference?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Team"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getFbsTeams: {
    parameters: {
      query?: {
        /** @description Year filter */
        year?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Team"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getRoster: {
    parameters: {
      query?: {
        /** @description Team name */
        team?: string;
        /** @description Season year */
        year?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Player"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getTalent: {
    parameters: {
      query?: {
        /** @description Year filter */
        year?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TeamTalent"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getTeamMatchup: {
    parameters: {
      query: {
        /** @description First team */
        team1: string;
        /** @description Second team */
        team2: string;
        /** @description Minimum year */
        minYear?: number;
        /** @description Maximum year */
        maxYear?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TeamMatchup"];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getVenues: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Venue"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getCoaches: {
    parameters: {
      query?: {
        /** @description First name filter */
        firstName?: string;
        /** @description Last name filter */
        lastName?: string;
        /** @description Team name filter */
        team?: string;
        /** @description Year filter */
        year?: number;
        /** @description Minimum year filter (inclusive) */
        minYear?: number;
        /** @description Maximum year filter (inclusive) */
        maxYear?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Coach"][];
        };
      };
    };
  };
  getRankings: {
    parameters: {
      query: {
        /** @description Year/season filter for games */
        year: number;
        /** @description Map filter */
        week?: number;
        /** @description Season type filter (regular or postseason) */
        seasonType?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["RankingWeek"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getLines: {
    parameters: {
      query?: {
        /** @description Game id filter */
        gameId?: number;
        /** @description Year/season filter for games */
        year?: number;
        /** @description Map filter */
        week?: number;
        /** @description Season type filter (regular or postseason) */
        seasonType?: string;
        /** @description Team */
        team?: string;
        /** @description Home team filter */
        home?: string;
        /** @description Away team filter */
        away?: string;
        /** @description Conference abbreviation filter */
        conference?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GameLines"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getRecruitingPlayers: {
    parameters: {
      query?: {
        /** @description Recruiting class year (required if team no specified) */
        year?: number;
        /** @description Type of recruit (HighSchool, JUCO, PrepSchool) */
        classification?: string;
        /** @description Position abbreviation filter */
        position?: string;
        /** @description State or province abbreviation filter */
        state?: string;
        /** @description Committed team filter (required if year not specified) */
        team?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Recruit"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getRecruitingTeams: {
    parameters: {
      query?: {
        /** @description Recruiting class year */
        year?: number;
        /** @description Team filter */
        team?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TeamRecruitingRank"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getRecruitingGroups: {
    parameters: {
      query?: {
        /** @description Starting year */
        startYear?: number;
        /** @description Ending year */
        endYear?: number;
        /** @description Team filter */
        team?: string;
        /** @description conference filter */
        conference?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PositionGroupRecruitingRating"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getSPRatings: {
    parameters: {
      query?: {
        /** @description Season filter (required if team not specified) */
        year?: number;
        /** @description Team filter (required if year not specified) */
        team?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TeamSPRating"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getSRSRatings: {
    parameters: {
      query?: {
        /** @description Season filter (required if team not specified) */
        year?: number;
        /** @description Team filter (required if year not specified) */
        team?: string;
        /** @description Conference filter */
        conference?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TeamSRSRating"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getConferenceSPRatings: {
    parameters: {
      query?: {
        /** @description Season filter */
        year?: number;
        /** @description Conference abbreviation filter */
        conference?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ConferenceSPRating"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getEloRatings: {
    parameters: {
      query?: {
        /** @description Season filter */
        year?: number;
        /** @description Maximum week filter */
        week?: number;
        /** @description Maximum season type to consider (defaults to regular if week is specified else defaults to postseason) */
        seasonType?: string;
        /** @description Team filter */
        team?: string;
        /** @description Conference filter */
        conference?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TeamEloRating"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getFPIRatings: {
    parameters: {
      query?: {
        /** @description Season filter */
        year?: number;
        /** @description Team filter */
        team?: string;
        /** @description Conference filter */
        conference?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TeamFPIRating"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getPredictedPoints: {
    parameters: {
      query: {
        /** @description Down filter */
        down: number;
        /** @description Distance filter */
        distance: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PredictedPoints"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getTeamPPA: {
    parameters: {
      query?: {
        /** @description Year filter (required if team not specified) */
        year?: number;
        /** @description Team filter (required if year not specified) */
        team?: string;
        /** @description Conference filter */
        conference?: string;
        /** @description Filter to remove garbage time plays from calculations */
        excludeGarbageTime?: boolean;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TeamPPA"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getGamePPA: {
    parameters: {
      query: {
        /** @description Year filter */
        year: number;
        /** @description Map filter */
        week?: number;
        /** @description Team filter */
        team?: string;
        /** @description Conference filter */
        conference?: string;
        /** @description Filter to remove garbage time plays from calculations */
        excludeGarbageTime?: boolean;
        /** @description Season type filter (regular or postseason) */
        seasonType?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GamePPA"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getPlayerGamePPA: {
    parameters: {
      query?: {
        /** @description Year filter */
        year?: number;
        /** @description Map filter */
        week?: number;
        /** @description Team filter */
        team?: string;
        /** @description Position abbreviation filter */
        position?: string;
        /** @description Player id filter */
        playerId?: number;
        /** @description Minimum play threshold filter */
        threshold?: string;
        /** @description Filter to remove garbage time plays from calculations */
        excludeGarbageTime?: boolean;
        /** @description Season type filter (regular or postseason) */
        seasonType?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PlayerGamePPA"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getPlayerSeasonPPA: {
    parameters: {
      query?: {
        /** @description Year filter */
        year?: number;
        /** @description Team filter */
        team?: string;
        /** @description Conference abbreviation filter */
        conference?: string;
        /** @description Position abbreviation filter */
        position?: string;
        /** @description Player id filter */
        playerId?: number;
        /** @description Minimum play threshold filter */
        threshold?: string;
        /** @description Filter to remove garbage time plays from calculations */
        excludeGarbageTime?: boolean;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PlayerSeasonPPA"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getFGEP: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["FieldGoalExpectedPoints"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getWinProbabilityData: {
    parameters: {
      query: {
        /** @description Game id filter */
        gameId: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PlayWP"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getPregameWinProbabilities: {
    parameters: {
      query?: {
        /** @description Year filter */
        year?: number;
        /** @description Map filter */
        week?: number;
        /** @description Team filter */
        team?: string;
        /** @description regular or postseason */
        seasonType?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PregameWP"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getTeamSeasonStats: {
    parameters: {
      query?: {
        /** @description Year filter (required if no team specified) */
        year?: number;
        /** @description Team filter (required if no year specified) */
        team?: string;
        /** @description Conference abbreviation filter */
        conference?: string;
        /** @description Starting week filter */
        startWeek?: number;
        /** @description Starting week filter */
        endWeek?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TeamSeasonStat"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getAdvancedTeamSeasonStats: {
    parameters: {
      query?: {
        /** @description Year filter (required if no team specified) */
        year?: number;
        /** @description Team filter (required if no year specified) */
        team?: string;
        /** @description Filter to remove garbage time plays from calculations */
        excludeGarbageTime?: boolean;
        /** @description Starting week filter */
        startWeek?: number;
        /** @description Starting week filter */
        endWeek?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AdvancedSeasonStat"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getAdvancedTeamGameStats: {
    parameters: {
      query?: {
        /** @description Year filter (required if no team specified) */
        year?: number;
        /** @description Map filter */
        week?: number;
        /** @description Team filter (required if no year specified) */
        team?: string;
        /** @description Opponent filter */
        opponent?: string;
        /** @description Filter to remove garbage time plays from calculations */
        excludeGarbageTime?: boolean;
        /** @description Season type filter (regular, postseason, or both) */
        seasonType?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AdvancedGameStat"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getStatCategories: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": string[];
        };
      };
    };
  };
  playerSearch: {
    parameters: {
      query: {
        /** @description Term to search on */
        searchTerm: string;
        /** @description Position abbreviation filter */
        position?: string;
        /** @description Team filter */
        team?: string;
        /** @description Year filter */
        year?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PlayerSearchResult"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getPlayerUsage: {
    parameters: {
      query: {
        /** @description Year filter */
        year: number;
        /** @description Team filter */
        team?: string;
        /** @description Conference abbreviation filter */
        conference?: string;
        /** @description Position abbreviation filter */
        position?: string;
        /** @description Player id filter */
        playerId?: number;
        /** @description Filter to remove garbage time plays from calculations */
        excludeGarbageTime?: boolean;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PlayerUsage"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getReturningProduction: {
    parameters: {
      query?: {
        /** @description Year filter */
        year?: number;
        /** @description Team filter */
        team?: string;
        /** @description Conference abbreviation filter */
        conference?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ReturningProduction"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getPlayerSeasonStats: {
    parameters: {
      query: {
        /** @description Year filter */
        year: number;
        /** @description Team filter */
        team?: string;
        /** @description Conference abbreviation filter */
        conference?: string;
        /** @description Start week filter */
        startWeek?: number;
        /** @description Start week filter */
        endWeek?: number;
        /** @description Season type filter (regular, postseason, or both) */
        seasonType?: string;
        /** @description Stat category filter (e.g. passing) */
        category?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PlayerSeasonStat"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getTransferPortal: {
    parameters: {
      query: {
        /** @description Year filter */
        year: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PortalPlayer"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getNFLTeams: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["DraftTeam"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getNFLPositions: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["DraftPosition"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  getDraftPicks: {
    parameters: {
      query?: {
        /** @description Year filter */
        year?: number;
        /** @description NFL team filter */
        nflTeam?: string;
        /** @description Player college filter */
        college?: string;
        /** @description College confrence abbreviation filter */
        conference?: string;
        /** @description NFL position filter */
        position?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description successful operation */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["DraftPick"][];
        };
      };
      /** @description error */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
}
